(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{117:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),u=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||o;return t?a.a.createElement(m,l(l({ref:n},s),{},{components:t})):a.a.createElement(m,l({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},98:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),a=t(7),o=(t(0),t(117)),i={id:"nvm",title:"Install NVM"},l={unversionedId:"nvm",id:"nvm",isDocsHomePage:!1,title:"Install NVM",description:"About",source:"@site/docs/nvm.mdx",slug:"/nvm",permalink:"/cpbooster/docs/nvm",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/nvm.mdx",version:"current",sidebar:"docs",previous:{title:"Coming From V1",permalink:"/cpbooster/docs/fromv1"}},c=[{value:"About",id:"about",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Verify Installation",id:"verify-installation",children:[]},{value:"Usage",id:"usage",children:[]}],s={toc:c};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"about"},"About"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"nvm is a version manager for node.js, designed to be installed per-user, and invoked per-shell.\nnvm works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms:\nunix, macOS, and windows WSL.")),Object(o.b)("h3",{id:"installation"},"Installation"),Object(o.b)("p",null,"Run any of the following commands in your terminal:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash\n")),Object(o.b)("p",null,"Running either of the above commands downloads a script and runs it. The script clones the nvm repository to\n",Object(o.b)("inlineCode",{parentName:"p"},"~/.nvm"),", and attempts to add the source lines from the snippet below to the correct profile file\n(",Object(o.b)("inlineCode",{parentName:"p"},"~/.bash_profile"),", ",Object(o.b)("inlineCode",{parentName:"p"},"~/.zshrc"),", ",Object(o.b)("inlineCode",{parentName:"p"},"~/.profile"),", or ",Object(o.b)("inlineCode",{parentName:"p"},"~/.bashrc"),")."),Object(o.b)("p",null,"For updated instructions visit:",Object(o.b)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm#installing-and-updating"},"https://github.com/nvm-sh/nvm#installing-and-updating")),Object(o.b)("h3",{id:"verify-installation"},"Verify Installation"),Object(o.b)("p",null,"To verify that nvm has been installed, do:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"command -v nvm\n")),Object(o.b)("p",null,"which should output ",Object(o.b)("inlineCode",{parentName:"p"},"nvm")," if the installation was successful.\nPlease note that ",Object(o.b)("inlineCode",{parentName:"p"},"which nvm")," will not work, since ",Object(o.b)("inlineCode",{parentName:"p"},"nvm")," is a\nsourced shell function, not an executable binary."),Object(o.b)("h3",{id:"usage"},"Usage"),Object(o.b)("p",null,"To download, compile, and install the latest release of node, do this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},'nvm install node # "node" is an alias for the latest version\n')),Object(o.b)("p",null,"And then in any new shell just use the installed version:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"nvm use node\n")))}u.isMDXComponent=!0}}]);